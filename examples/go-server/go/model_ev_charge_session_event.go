// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Example XENON webhook receiver
 *
 * This is an example webhook receiver for XENON.
 *
 * API version: v1.0.0
 * Contact: developer-community@gridx.de
 */

package openapi


import (
	"time"
)



type EvChargeSessionEvent struct {

	// The unique ID of the event instance.
	Id string `json:"id"`

	// Time when the event has occurred in RFC3339 format.
	Time time.Time `json:"time"`

	// Content-Type indicating how to parse the `data` attribute. Only 'application/json' is supported for now. If omitted, it is guaranteed to be `application/json`.
	DataContentType string `json:"dataContentType,omitempty"`

	// The adhered CloudEvents specification version, currently \"1.0\". Only consists of major and minor version parts, to allow patching in a backward-compatible fashion.
	SpecVersion string `json:"specVersion"`

	// The source of the event is usually a resource identifier path that can be used to identify the object which triggered the event.
	Source string `json:"source"`

	// Correlation ID to identify the request triggering the event.
	CorrelationID string `json:"correlationID,omitempty"`

	Type string `json:"type"`

	Data EvChargeSessionEventData `json:"data"`
}

// AssertEvChargeSessionEventRequired checks if the required fields are not zero-ed
func AssertEvChargeSessionEventRequired(obj EvChargeSessionEvent) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"time": obj.Time,
		"specVersion": obj.SpecVersion,
		"source": obj.Source,
		"type": obj.Type,
		"data": obj.Data,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertEvChargeSessionEventDataRequired(obj.Data); err != nil {
		return err
	}
	return nil
}

// AssertEvChargeSessionEventConstraints checks if the values respects the defined constraints
func AssertEvChargeSessionEventConstraints(obj EvChargeSessionEvent) error {
	if err := AssertEvChargeSessionEventDataConstraints(obj.Data); err != nil {
		return err
	}
	return nil
}
