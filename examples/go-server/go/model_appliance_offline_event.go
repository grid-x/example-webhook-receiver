// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * gridX Webhook Event Receiver API
 *
 * This API describes the event webhook calling convention. In order to receive webhook events from the gridX API, third parties must implement endpoints according to this specification. In the following, the external partner API is referred to as  \"external API\", while the gridX API is called \"gridX\". 
 *
 * API version: 1.0.0
 */

package openapi


import (
	"time"
)



type ApplianceOfflineEvent struct {

	Id string `json:"id"`

	// Time when the event has occurred in RFC3339 format.
	Time time.Time `json:"time"`

	// Content-Type indicating how to parse the `data` attribute. Only 'application/json' is supported for now. If omitted, it is guaranteed to be `application/json`.
	DataContentType string `json:"dataContentType,omitempty"`

	// The CloudEvents specification that is followed, currently \"1.0\". Only consists of major and minor version parts, to allow patching in a backward-compatible fashion.
	SpecVersion string `json:"specVersion"`

	// Source of the event, which is usually a resource identifier path that can be used to identify the object which triggered the event.
	Source string `json:"source"`

	// ID to identify the request triggering the event.
	CorrelationID string `json:"correlationID,omitempty"`

	Type string `json:"type"`

	Data ApplianceEventData `json:"data,omitempty"`
}

// AssertApplianceOfflineEventRequired checks if the required fields are not zero-ed
func AssertApplianceOfflineEventRequired(obj ApplianceOfflineEvent) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"time": obj.Time,
		"specVersion": obj.SpecVersion,
		"source": obj.Source,
		"type": obj.Type,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertApplianceEventDataRequired(obj.Data); err != nil {
		return err
	}
	return nil
}

// AssertApplianceOfflineEventConstraints checks if the values respects the defined constraints
func AssertApplianceOfflineEventConstraints(obj ApplianceOfflineEvent) error {
	return nil
}
