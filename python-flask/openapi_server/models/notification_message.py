from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class NotificationMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title=None, text_content_type=None, text=None, action_url=None):  # noqa: E501
        """NotificationMessage - a model defined in OpenAPI

        :param title: The title of this NotificationMessage.  # noqa: E501
        :type title: object
        :param text_content_type: The text_content_type of this NotificationMessage.  # noqa: E501
        :type text_content_type: str
        :param text: The text of this NotificationMessage.  # noqa: E501
        :type text: str
        :param action_url: The action_url of this NotificationMessage.  # noqa: E501
        :type action_url: str
        """
        self.openapi_types = {
            'title': object,
            'text_content_type': str,
            'text': str,
            'action_url': str
        }

        self.attribute_map = {
            'title': 'title',
            'text_content_type': 'textContentType',
            'text': 'text',
            'action_url': 'actionURL'
        }

        self._title = title
        self._text_content_type = text_content_type
        self._text = text
        self._action_url = action_url

    @classmethod
    def from_dict(cls, dikt) -> 'NotificationMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Notification_message of this NotificationMessage.  # noqa: E501
        :rtype: NotificationMessage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> object:
        """Gets the title of this NotificationMessage.

        Title of the message, in the `locale` of the `recipient`. Subject to changes at any time.  # noqa: E501

        :return: The title of this NotificationMessage.
        :rtype: object
        """
        return self._title

    @title.setter
    def title(self, title: object):
        """Sets the title of this NotificationMessage.

        Title of the message, in the `locale` of the `recipient`. Subject to changes at any time.  # noqa: E501

        :param title: The title of this NotificationMessage.
        :type title: object
        """

        self._title = title

    @property
    def text_content_type(self) -> str:
        """Gets the text_content_type of this NotificationMessage.

        Content-Type of the `text` attribute.  # noqa: E501

        :return: The text_content_type of this NotificationMessage.
        :rtype: str
        """
        return self._text_content_type

    @text_content_type.setter
    def text_content_type(self, text_content_type: str):
        """Sets the text_content_type of this NotificationMessage.

        Content-Type of the `text` attribute.  # noqa: E501

        :param text_content_type: The text_content_type of this NotificationMessage.
        :type text_content_type: str
        """
        allowed_values = ["text/html", "text/plain"]  # noqa: E501
        if text_content_type not in allowed_values:
            raise ValueError(
                "Invalid value for `text_content_type` ({0}), must be one of {1}"
                .format(text_content_type, allowed_values)
            )

        self._text_content_type = text_content_type

    @property
    def text(self) -> str:
        """Gets the text of this NotificationMessage.

        Exemplary text message in the `locale` of the `recipient`. Subject to changes at any time.  # noqa: E501

        :return: The text of this NotificationMessage.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this NotificationMessage.

        Exemplary text message in the `locale` of the `recipient`. Subject to changes at any time.  # noqa: E501

        :param text: The text of this NotificationMessage.
        :type text: str
        """

        self._text = text

    @property
    def action_url(self) -> str:
        """Gets the action_url of this NotificationMessage.

        URL that links to further information about the event's origin, usable for call-to-action buttons.  # noqa: E501

        :return: The action_url of this NotificationMessage.
        :rtype: str
        """
        return self._action_url

    @action_url.setter
    def action_url(self, action_url: str):
        """Sets the action_url of this NotificationMessage.

        URL that links to further information about the event's origin, usable for call-to-action buttons.  # noqa: E501

        :param action_url: The action_url of this NotificationMessage.
        :type action_url: str
        """

        self._action_url = action_url
