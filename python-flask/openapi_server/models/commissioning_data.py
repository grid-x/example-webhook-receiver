from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class CommissioningData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_id=None, customer_email=None, customer_address=None, system_name=None, gateway_serialnumber=None):  # noqa: E501
        """CommissioningData - a model defined in OpenAPI

        :param customer_id: The customer_id of this CommissioningData.  # noqa: E501
        :type customer_id: str
        :param customer_email: The customer_email of this CommissioningData.  # noqa: E501
        :type customer_email: str
        :param customer_address: The customer_address of this CommissioningData.  # noqa: E501
        :type customer_address: str
        :param system_name: The system_name of this CommissioningData.  # noqa: E501
        :type system_name: str
        :param gateway_serialnumber: The gateway_serialnumber of this CommissioningData.  # noqa: E501
        :type gateway_serialnumber: str
        """
        self.openapi_types = {
            'customer_id': str,
            'customer_email': str,
            'customer_address': str,
            'system_name': str,
            'gateway_serialnumber': str
        }

        self.attribute_map = {
            'customer_id': 'customerID',
            'customer_email': 'customerEmail',
            'customer_address': 'customerAddress',
            'system_name': 'systemName',
            'gateway_serialnumber': 'gatewaySerialnumber'
        }

        self._customer_id = customer_id
        self._customer_email = customer_email
        self._customer_address = customer_address
        self._system_name = system_name
        self._gateway_serialnumber = gateway_serialnumber

    @classmethod
    def from_dict(cls, dikt) -> 'CommissioningData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CommissioningData of this CommissioningData.  # noqa: E501
        :rtype: CommissioningData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_id(self) -> str:
        """Gets the customer_id of this CommissioningData.

        The ID of the newly created customer after the commissioning process.  # noqa: E501

        :return: The customer_id of this CommissioningData.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: str):
        """Sets the customer_id of this CommissioningData.

        The ID of the newly created customer after the commissioning process.  # noqa: E501

        :param customer_id: The customer_id of this CommissioningData.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def customer_email(self) -> str:
        """Gets the customer_email of this CommissioningData.

        The email of the newly created customer after the commissioning process.  # noqa: E501

        :return: The customer_email of this CommissioningData.
        :rtype: str
        """
        return self._customer_email

    @customer_email.setter
    def customer_email(self, customer_email: str):
        """Sets the customer_email of this CommissioningData.

        The email of the newly created customer after the commissioning process.  # noqa: E501

        :param customer_email: The customer_email of this CommissioningData.
        :type customer_email: str
        """

        self._customer_email = customer_email

    @property
    def customer_address(self) -> str:
        """Gets the customer_address of this CommissioningData.

        The address of the newly created customer after the commissioning process.  # noqa: E501

        :return: The customer_address of this CommissioningData.
        :rtype: str
        """
        return self._customer_address

    @customer_address.setter
    def customer_address(self, customer_address: str):
        """Sets the customer_address of this CommissioningData.

        The address of the newly created customer after the commissioning process.  # noqa: E501

        :param customer_address: The customer_address of this CommissioningData.
        :type customer_address: str
        """

        self._customer_address = customer_address

    @property
    def system_name(self) -> str:
        """Gets the system_name of this CommissioningData.

        The name of the commissioned system.  # noqa: E501

        :return: The system_name of this CommissioningData.
        :rtype: str
        """
        return self._system_name

    @system_name.setter
    def system_name(self, system_name: str):
        """Sets the system_name of this CommissioningData.

        The name of the commissioned system.  # noqa: E501

        :param system_name: The system_name of this CommissioningData.
        :type system_name: str
        """

        self._system_name = system_name

    @property
    def gateway_serialnumber(self) -> str:
        """Gets the gateway_serialnumber of this CommissioningData.

        The serialnumber of the gateway corresponding to the commissioned system.  # noqa: E501

        :return: The gateway_serialnumber of this CommissioningData.
        :rtype: str
        """
        return self._gateway_serialnumber

    @gateway_serialnumber.setter
    def gateway_serialnumber(self, gateway_serialnumber: str):
        """Sets the gateway_serialnumber of this CommissioningData.

        The serialnumber of the gateway corresponding to the commissioned system.  # noqa: E501

        :param gateway_serialnumber: The gateway_serialnumber of this CommissioningData.
        :type gateway_serialnumber: str
        """

        self._gateway_serialnumber = gateway_serialnumber
